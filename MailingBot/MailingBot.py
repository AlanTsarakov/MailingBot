from dotenv import load_dotenv
import os
import telebot
import requests
import time


load_dotenv("keys.env")

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
UNISENDER_API_KEY = os.getenv("UNISENDER_API_KEY")

bot = telebot.TeleBot(TELEGRAM_TOKEN)

def add_to_unisender_list(email):
    base_url = "https://api.unisender.com/ru/api/subscribe"
    
    params = {
        "format": "json",
        "api_key": UNISENDER_API_KEY,
        "list_ids": "19843137",  
        "fields[email]": email,
        "fields[Name]": "–ü–æ–¥–ø–∏—Å—á–∏–∫ –±–æ—Ç–∞",  
        "tags": "telegram_bot,auto_subscribe",  
        "double_optin": "3", 
        "overwrite": "2"  
    }
    
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        response = requests.get(base_url, params=params, timeout=10)  
        result = response.json()
        
        if 'result' in result and 'person_id' in result['result']:
            return {'success': True, 'person_id': result['result']['person_id']}
        else:
            return {'success': False, 'error': result.get('error', 'Unknown error')}
            
    except Exception as e:
        return {'success': False, 'error': str(e)}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à email, –∏ —è –¥–æ–±–∞–≤–ª—é –≤–∞—Å –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏.\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–∞–º –ø—Ä–∏–¥–µ—Ç –ø–∏—Å—å–º–æ —Å PDF-–¥–æ–∫—É–º–µ–Ω—Ç–æ–º."
    )
    bot.reply_to(message, welcome_text)

@bot.message_handler(content_types=["text"])
def handle_email(message):
    email = message.text.strip()
    

    if "@" not in email or "." not in email or len(email) < 5:
        bot.reply_to(message, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å.")
        return
    

    result = add_to_unisender_list(email)
    
    if result['success']:
        response_text = (
            "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!\n\n"
            f"–í–∞—à ID –≤ —Å–∏—Å—Ç–µ–º–µ: {result['person_id']}\n"
            "–ü–∏—Å—å–º–æ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –ø—Ä–∏–¥–µ—Ç –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç."
        )
    else:
        error_msg = result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
        response_text = (
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ:\n"
            f"{error_msg}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
        )
    
    bot.reply_to(message, response_text)


while True:
    try:
        print("üîÑ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        bot.polling(none_stop=True, timeout=30)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 60 —Å–µ–∫...")
        time.sleep(100)  # –ñ–¥—ë–º, –ø–æ–∫–∞ Telegram –ø–æ—á–∏–Ω—è—Ç
